@using BS_FormBuilder.Web.Helpers
@using BS_FormBuilder.Web
@using BS_FormBuilder.Web.Models.Entities
@model BS_FormBuilder.Web.Models.Entities.Form


@{
    ViewBag.Title = "EditFormAttributes";
}

<h3>Edit Form Attributes <span class="backToListLink"> [ @Html.ActionLink("Back to List", "List") ]</span></h3>

@using (Html.BeginForm("EditAttributes","FormBuilder", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@Model.FormName</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.FormId)
        @Html.HiddenFor(model => model.RowVersion)

        <div class="form-group">
            @Html.LabelFor(model => model.FormId, new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.FormId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FormName, new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.FormName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FormDisplayStyle, new { @class = "control-label col-md-2" })
            <div class="col-md-5 form-control-static">
                <div class="radio-common">
                    <label class="radio-wrapper">
                        @Html.RadioButtonFor(m => m.FormDisplayStyle, FormDisplayStyle.Non_Modal
                                             , new { id = "FormDisplayStyle_NonModal" })
                        @DropDownEnumExtension.GetEnumDescription(FormDisplayStyle.Non_Modal)
                    </label>
                </div>

                <div class="radio-common">
                    <label class="radio-wrapper">
                        @Html.RadioButtonFor(m => m.FormDisplayStyle, FormDisplayStyle.Slide_From_Top
                                             , new { id = "FormDisplayStyle_Modal" })
                        @DropDownEnumExtension.GetEnumDescription(FormDisplayStyle.Slide_From_Top)
                    </label>
                </div>

                <div class="style-div">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OpenDialogBtnBackground, new { @class = "control-label col-md-5" })
                        <div class="col-md-7 form-control-static">
                            @Html.TextBoxFor(m => m.OpenDialogBtnBackground, new { @class = "color {required:false} modal-state", id = "backgroundColor" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OpenDialogBtnForeground, new { @class = "control-label col-md-5" })
                        <div class="col-md-7 form-control-static">
                            @Html.TextBoxFor(m => m.OpenDialogBtnForeground, new { @class = "color {required:false} modal-state", id = "foregroundColor" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OpenDialogBtnFont, new { @class = "control-label col-md-5" })
                        <div class="col-md-7 form-control-static">
                            <select id="OpenDialogBtnFont" name="OpenDialogBtnFont"
                                    class="form-control bfh-fonts modal-state" data-font="@Model.OpenDialogBtnFont"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OpenDialogBtnFontSize, new { @class = "control-label col-md-5" })
                        <div class="col-md-7 form-control-static">
                            <select id="OpenDialogBtnFontSize" name="OpenDialogBtnFontSize"
                                    class="form-control bfh-fontsizes modal-state" data-fontsize="@Model.OpenDialogBtnFontSize"></select>
                        </div>
                    </div>

                    <div class="form-group" >
                        @Html.LabelFor(model => model.OpenDialogBtnPosition, new { @class = "control-label col-md-5" })
                        <div class="col-md-7 form-control-static">
                            @Html.EnumDropDownListFor(m => m.OpenDialogBtnPosition, new { @class = "form-control modal-state" })
                        </div>
                    </div>
                </div>

                <div class="radio-common">
                    <label class="radio-wrapper">
                        @Html.RadioButtonFor(m => m.FormDisplayStyle, FormDisplayStyle.Slide_From_Bottom_Right
                                             , new { id = "FormDisplayStyle_ModalBottom" })
                        @DropDownEnumExtension.GetEnumDescription(FormDisplayStyle.Slide_From_Bottom_Right)
                    </label>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="submitButton" value="@Messages.EditAttributeSaveAndReturn" class="btn btn-info" />
                <input type="submit" name="submitButton" value="@Messages.EditAttributeSaveAndBuild" class="btn btn-info" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script type="text/javascript">

        function changeInputStatus() {
            if ($("#FormDisplayStyle_Modal").is(':checked')) {
                $(".modal-state").removeAttr("disabled");
            }
            else {
                $(".modal-state").attr("disabled", "disabled");
            }
        }

        $(document).ready(function () {
            changeInputStatus();
            $('.radio-wrapper').click(function () {
                changeInputStatus();
            });
        });
        
    </script>
}